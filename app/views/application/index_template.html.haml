- singular = records.model_name.singular
- plural = records.model_name.plural
- klass = singular.classify.constantize
- has_new_button = true if has_new_button.nil?
- date_columns ||= nil
- card_size ||= :small

-#
-# Meta
-#

- page_title klass.model_name.human(count: 2)
- breadcrumb :"#{plural}"

-#
-# Content
-#

.hide-on-extra-large-only= render "notes/recently_viewed"

= render "pagination", records: records

-# Index buttons

.row.no-margin
  .col.s12.hide-on-med-and-down
    .row.no-margin
      .col.s12
        - if has_new_button
          = link_to [:new, singular], class: "btn" do
            #{fa_icon("plus")} &nbsp; #{t("#{singular}.new")}

        %button.tooltipped.jsToggleTable.btn.grey.lighten-3.grey-text{ "data-tooltip": t("app.toggle_table_or_tiles"), "data-position": "top" }
          = fa_icon("th")

.row
  .col.s12.xl8.xxl9

    -# Table

    .hide.jsToggleTable__table
      .row
        .col.s12
          = render "#{plural}/table", "#{plural}": records

    -# Tiles

    .jsToggleTable__tile
      .row{ class: records.present? ? "qa-#{plural}" : "" }
        - card_class = card_size == :small ? "m6 l6 xxl4" : "m6 xxl4"
        - if has_new_button
          .col.s12{ class: card_class }
            = render "buttons/index_new", type: singular, card_size: card_size if has_new_button

        - (records || []).each do |record|
          .col.s12{ class: card_class }= render record


  .col.s12.xl4.xxl3
    .hide-on-extra-large-and-down= render "notes/recently_viewed"

    -#
    -# Filter panel
    -#

    .row
      .col.s12
        = render "filter_panel", model: klass, has_new_button: has_new_button, date_columns: date_columns


= render "pagination", records: records
