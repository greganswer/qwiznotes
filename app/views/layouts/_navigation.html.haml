.navbar-fixed
  %nav
    .nav-wrapper
      %a#site-name.brand-logo{href: root_path}
        &nbsp;
        = site_name.split[0]
        %span>= site_name.split[1]

      %a.button-collapse.jsButtonCollapse{href: '#', 'data-activates': 'menu-mobile-side'}
        = material_icon.menu
      %ul.right.hide-on-med-and-down

        -#
        -# Search
        -#

        - if user_signed_in?
          %li.search
            = form_tag :notes, method: :get do |f|
              = material_icon.search.css_class("grey-text text-lighten-3")
              = text_field_tag :q, nil, placeholder: t("note.search"), class: " jsAjaxAutocomplete", value: params[:q], "data-source": autocomplete_notes_path, "data-no-suggestion-notice": t("autocomplete.no_suggestions")

        -#
        -# Languages
        -#

          %li
            %a.dropdown-button{"data-activates": "dropdown1", href: "#!", 'data-beloworigin': "true"}
              = APP_CONFIG[:languages][I18n.locale]
              = material_icon.arrow_drop_down.css_class(:right)
          %ul#dropdown1.dropdown-content
            - APP_CONFIG[:languages].except(I18n.locale).each do |locale, language|
              %li= link_to language, url_for(locale: locale)

        -#
        -# Resource links
        -#

        - if policy(Note).new?
          %li= link_to_hash_if_current t("note.new"), new_note_path

        - args = { notes: Note, users: User }
        - args.each do |plural, model|
          - if policy(model).index?
            %li= link_to_hash_if_current model.model_name.human(count: 2), plural

        %li= link_to_hash_if_current t("app.help"), help_path

        -#
        -# Account menu
        -#

        - if user_signed_in?
          %li
            %a.dropdown-button{"data-activates": "dropdown2", href: "#!", 'data-beloworigin': "true"}
              &nbsp;
              = image_tag current_user.image_url, alt: current_user, class: 'circle'
              = material_icon.arrow_drop_down.css_class(:right)
          %ul#dropdown2.dropdown-content
            %li
              = link_to_hash_if_current edit_user_registration_path do
                = fa_icon("cog")
                = t("app.account")

            %li
              = link_to_hash_if_current destroy_user_session_path, method: :delete do
                = fa_icon("sign-out")
                = t("app.sign_out")

        - else
          %li= link_to_hash_if_current t("app.sign_in"), new_user_session_path
          %li= link_to_hash_if_current t("devise.registrations.new.sign_up"), new_user_registration_path, class: 'btn'



-################################################
-# Side nav
-################################################

%ul#menu-mobile-side.side-nav
  - if user_signed_in?
    %li
      .userView
        .background.primary-color
        %img.circle{ src: current_user.image_url }
        %span.white-text.name= current_user
        %span.white-text.email= current_user.email

  -#
  -# Languages
  -#

    %li.no-padding
    %ul.collapsible.collapsible-accordion
      %li
        %a.collapsible-header
          = APP_CONFIG[:languages][I18n.locale]
          = material_icon.arrow_drop_down
        .collapsible-body
          %ul
            - APP_CONFIG[:languages].except(I18n.locale).each do |locale, language|
              %li= link_to language, url_for(locale: locale)

  -#
  -# Search
  -#

  - if user_signed_in?
    %li.search
      = form_tag :notes, method: :get do |f|
        = material_icon.search.css_class("grey-text text")
        = text_field_tag :q, nil, placeholder: t("note.search"), value: params[:q]
    %li.divider

  -#
  -# Sign in/up
  -#

  - unless user_signed_in?
    %li= link_to_hash_if_current t("app.sign_in"), new_user_session_path
    %li= link_to_hash_if_current t("devise.registrations.new.sign_up"), new_user_registration_path, class: 'btn'
    %li.divider

  -#
  -# Resource links
  -#

  - if policy(Note).new?
    %li
      = link_to_hash_if_current new_note_path do
        = fa_icon("plus")
        =  t("note.new")

  - args = { notes: [Note, "th"], users: [User, "user-circle"] }
  - args.each do |plural, array|
    - if policy(array.first).index?
      %li
        = link_to_hash_if_current plural do
          = fa_icon(array.last)
          = array.first.model_name.human(count: 2)

  -#
  -# Account menu
  -#

  - if user_signed_in?
    %li.divider
    %li
      = link_to_hash_if_current edit_user_registration_path do
        = fa_icon("cog")
        = t("app.account")

  %li
    = link_to_hash_if_current help_path do
      = fa_icon("question-circle")
      = t("app.help")

  - if user_signed_in?
    %li
      = link_to_hash_if_current destroy_user_session_path, method: :delete do
        = fa_icon("sign-out")
        = t("app.sign_out")
