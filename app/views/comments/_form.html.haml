- if policy(Comment).index?
  .anchor#comments
  %h3= t("comment.count", count: item.comments.count)
  .row


    - #
    - # Comments
    - #

    - comments = item.comments.includes(:user, :item).by_created.page(params[:page])
    %ul.collection.no-border.z-depth-1
      - comments.each do |comment|
        - user = comment.user
        %li.collection-item.avatar.no-border{ class: comment.css_class }
          = render "users/image_link", user: user
          %h5.no-margin
            = link_to user, user, class: "blue-grey-text text-darken-2"
            %small.grey-text= local_time_ago(comment.created_at)
          .jsCommentContent= comment.content

          -# Buttons

          - if policy(comment).destroy?
            .jsCommentButtons
              - if policy(comment).edit?
                %button.btn-flat.jsCommentEditButton= t("button.edit")
              = link_to t("button.delete"), comment, method: :delete, data: { confirm: t("comment.confirm_delete") }, remote: true, class: "btn-flat"

          -# Edit form

          - if policy(comment).edit?
            .jsCommentEditForm.hide
              = simple_form_for(comment, remote: true, method: :patch) do |f|
                = f.input :content, required: true, label: false, wrapper: false, value: comment.content, input_html: { class: "panel" }
                = f.button :submit, t("comment.submit"), class: "btn"
                %button.btn.grey.lighten-2.z-depth-0.jsCommentEditCancelButton{ type: :button }= t("button.cancel")

      - #
      - # Create form
      - #

      - if policy(Comment).new?
        %li.collection-item.avatar.no-border.grey.lighten-4
          - @comment ||= Comment.new
          = render "users/image_link", user: current_user
          = simple_form_for([item, @comment]) do |f|
            = render "form_errors", record: @comment
            = f.input :content, as: :string, required: true, label: false, placeholder: t("comment.placeholder"), wrapper_html: { class: "no-margin" }, input_html: { class: "white", style: "padding: 0 16px; width: 96%; border: 1px solid #DDD;" }
            = f.button :submit, t("comment.submit"), id: "qa-comment-save", class: "btn hide"


    - unless user_signed_in?
      %br
      - link = link_to t("app.sign_in").downcase, new_user_session_path
      %h3.center= t("comment.needs_login_html", link: link)


  = render "pagination", records: comments
